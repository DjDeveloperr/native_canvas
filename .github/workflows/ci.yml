name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - name: Setup repo
        uses: actions/checkout@v2

      - name: Setup Deno
        uses: denoland/setup-deno@main
        with:
          deno-version: 'v1.x'

      - name: Check Formatting
        run: deno fmt --check

  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        
    runs-on: ${{ matrix.os }}

    steps:
      - name: Setup repo
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup Deno
        uses: denoland/setup-deno@main
        with:
          deno-version: 'v1.x'

      - name: Setup Depot Tools (Unix)
        if: runner.os != 'Windows'
        run: |
          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
          echo "PATH=$(pwd)/depot_tools:$PATH" >> $GITHUB_ENV

      - name: Setup Depot Tools (Windows)
        if: runner.os == 'Windows'
        run: |
          curl -o depot_tools.zip https://storage.googleapis.com/chrome-infra/depot_tools.zip
          mkdir depot_tools
          cd depot_tools
          7z x ../depot_tools.zip
          cd ..
          echo "PATH=$(pwd)/depot_tools;$PATH" >> $GITHUB_ENV

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ github.job }}-${{ matrix.os }}
        
      - name: Build Skia
        run: deno task build-skia ccache

      - name: Build Native Library
        run: mkdir ./native/build && deno task build

      - name: Strip Native Library (Linux)
        if: runner.os == 'Linux'
        run: strip ./native/build/libnative_canvas.so

      - name: Run Tests
        run: deno task test

      - name: Release
        uses: softprops/action-gh-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "release draft"
          draft: true
          files: |
            native/build/libnative_canvas.so
            native/build/libnative_canvas.dylib
            native/build/native_canvas.dll
